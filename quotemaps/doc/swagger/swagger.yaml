---
swagger: "2.0"
info:
  description: QuoteMaps
  version: 1.0.0
  title: QuoteMaps
host: virtserver.swaggerhub.com
basePath: /Web_project/QuoteMaps/1.0.0
tags:
- name: User
  description: User of web site
schemes:
- https
- http
paths:
  /api/user/register:
    post:
      tags:
      - User
      summary: Create new user
      description: Create new user with nickname and password
      parameters:
      - name: nickname
        in: query
        description: nickname of the user
        required: true
        type: string
      - name: password
        in: query
        description: password of the user
        required: true
        type: string
      responses:
        "200":
          description: User create
          schema:
            $ref: '#/definitions/inline_response_200'
        "204":
          description: You need to fill both inputs_nThe nickname is already exists
        "500":
          description: An error occured when saving the new user
  /api/user/login:
    post:
      tags:
      - User
      summary: User log in
      description: User log in with nickname and password
      parameters:
      - in: body
        name: User
        description: User parameters to log in
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: User connected
        "204":
          description: |-
            This nickname doesn't exists
            Password incorrect
        "401":
          description: Someone is already connected
  /api/user/logout:
    get:
      tags:
      - User
      summary: User to log out
      description: User log out from his account
      parameters:
      - in: body
        name: User
        description: User parameters account
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: User log out
        "401":
          description: Tried to log out when not connected
  /api/user/list:
    get:
      tags:
      - User
      summary: List of users
      description: Send the list of registered users
      parameters: []
      responses:
        "200":
          description: List of registered users
  /api/user/loggedInUser:
    get:
      tags:
      - User
      summary: Currently logged
      description: Send the currently logged in user
      parameters: []
      responses:
        "200":
          description: The current user
  /api/user/updateScore:
    put:
      tags:
      - User
      summary: Update the score of the user after answering a question.
      parameters:
      - name: nickname
        in: query
        description: nickname of the user we want to update the score
        required: false
        type: string
      - name: score
        in: query
        description: Current score of the user
        required: false
        type: integer
      responses:
        "200":
          description: Score has been updated.
definitions:
  User:
    type: object
    required:
    - nickname
    - password
    properties:
      nickname:
        type: string
        example: lreveillere
      password:
        type: string
        example: lreveillere
  inline_response_200:
    type: object
    required:
    - nickname
    - password
    - score
    properties:
      nickname:
        type: string
      password:
        type: string
      score:
        type: integer
